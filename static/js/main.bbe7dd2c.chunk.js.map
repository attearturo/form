{"version":3,"sources":["logo.svg","components/Navigation.js","components/Form.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","react_default","a","createElement","className","href","this","props","titulo","Component","Form","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","title","responsible","description","priority","handleInput","bind","assertThisInitialized","handleSubmit","e","_e$target","target","value","name","console","log","setState","defineProperty","preventDefault","onAdd","onSubmit","type","placeholder","onChange","data","App","handleAdd","toConsumableArray","concat","index","window","confirm","filter","i","_this2","todos","map","key","responsable","onClick","handleRemove","components_Navigation","length","src","logo","alt","style","width","margin","components_Form","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bbe7dd2c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\n\r\nclass Navigation extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-dark bg-dark\">\r\n                <a href=\"google.com\" className='text-white'>\r\n                   {this.props.titulo}\r\n            </a>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React, { Component } from 'react';\r\n\r\n\r\n\r\nclass Form extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            title: \"\",\r\n            responsible: \"\",\r\n            description: \"\",\r\n            priority: \"low\"\r\n        };\r\n\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n\r\n    handleInput(e) {\r\n        const {value, name} = e.target;\r\n        console.log(value, name);\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state);\r\n        console.log(this.state);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card\">\r\n                <form className=\"card-body\" onSubmit={this.handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Titulo\"\r\n                        value= {this.state.title}\r\n                        onChange={this.handleInput}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"responsible\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Responsable\"\r\n                            value={this.state.responsible}\r\n                            onChange={this.handleInput}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"description\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Descripción\"\r\n                            value={this.state.description}\r\n                            onChange={this.handleInput}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <select \r\n                            name=\"priority\"\r\n                            className=\"form-control\"\r\n                            value={this.state.priority}\r\n                            onChange={this.handleInput}\r\n                        >\r\n                            <option>low</option>\r\n                            <option>medium</option>\r\n                            <option>high</option>\r\n                        </select>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"btn btn-primary\">\r\n                        Guardar\r\n                    </button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n//components\nimport Navigation from \"./components/Navigation\";\nimport Form from \"./components/Form\";\n\n//data\nimport { data } from './data.json';\nconsole.log(data);\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      data\n    };\n\n    this.handleAdd = this.handleAdd.bind(this);\n  }\n\n\n  handleAdd(data){\n    this.setState({\n      data: [...this.state.data, data]\n    })\n  }\n\n  handleRemove(index){\n    if (window.confirm(\"Seguro que quieres borrarla?\")) {\n      this.setState({\n        data: this.state.data.filter((e, i) => {\n          return i !== index\n        })\n      })\n    }\n      console.log(index)\n  }\n\n  render() {\n    const todos = this.state.data.map((data, i) => {\n      return (\n        <div className=\"col-md-4\" key={i}>\n          <div className=\"card mt-4\">\n            <div className=\"card-header\" >\n              <h3><strong>{data.title}</strong></h3>\n\n            <span className=\"badge badge-pill badge-danger ml-2\">\n              {data.priority}\n            </span>\n            </div>\n\n          <div className=\"card-body\">\n              <p>{data.responsable}</p>\n              <p><mark>{data.description}</mark></p>\n          </div>\n\n          <div className=\"card-footer\">\n            <button\n              className=\"btn btn-danger\"\n              onClick={this.handleRemove.bind(this, i)}            \n              >\n              Borrar\n            </button>\n          </div>\n\n          </div>\n        </div>\n        )\n      });\n\n    //return the component\n    return (\n      <div className=\"App\">\n        < Navigation titulo=\"Navegación\">\n        </Navigation>\n        \n        <h1><strong>Form\n           <span className=\"badge badge-pill badge-light ml-2\">\n            {this.state.data.length}\n          </span>\n        </strong></h1>\n        \n\n        <div className=\"container\">\n          <div className=\"row mt-4\">\n\n            <div className=\"col-md-4 text-center\" >\n              <img src={logo} className=\"App-logo\" alt=\"logo\" style={{ width: 100, margin:0 }} />\n              <Form onAdd={this.handleAdd} />\n            </div>\n\n            <div className=\"col-md-8\">\n              <div className=\"row\">\n                {todos}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}